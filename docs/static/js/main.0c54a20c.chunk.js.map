{"version":3,"sources":["components/AgregarCategoria.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","obtenerGif","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6MAoCeA,MAjCf,YAA8C,IAAlBC,EAAiB,EAAjBA,cAAiB,EACRC,mBAAS,MADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACC,oCACC,0BAAMC,SAXa,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAQb,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,a,uBCrBhCG,EAAU,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UAAUH,GAD1C,+DAEHI,MAAMF,GAFH,cAEhBG,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAG,UAAEA,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARpB,kBAYfM,GAZe,4CAAH,sDCER,SAASO,EAAT,GAA6B,IAAPL,EAAM,EAANA,IAEjC,OACI,yBAAKM,UAAU,0CACX,yBAAKC,IAAKP,EAAIA,IAAKQ,IAAKR,EAAIE,QAC5B,+BAAKF,EAAIE,MAAT,MCHL,IAAMO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAACA,GAAe,IAAD,EAEbd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IAFjB,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAevC,OAXAC,qBAAU,WACNxB,EAAWC,GAAWwB,MAAM,SAAAC,GACxBH,EACI,CACIf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDZsBK,CAAa1B,GAAhCa,EAF4B,EAElCN,KAAca,EAFoB,EAEpBA,QAErB,OACC,oCACC,4BAAKpB,GACHoB,GAAW,uBAAGJ,UAAU,oCAAb,gBACb,yBAAKA,UAAU,+CACbH,EAAOJ,KAAI,SAAAC,GAAG,OAAK,kBAACK,EAAD,CAAaY,IAAKjB,EAAIA,IAAKA,IAAKA,GAAhC,aERXkB,EAAe,WAAO,IAAD,EAEG1C,mBAAS,CAAC,kBAAmB,WAAY,cAF5C,mBAE1B2C,EAF0B,KAEd5C,EAFc,KAQjC,OACC,6BACC,2CACA,kBAAC,EAAD,CAAkBA,cAAeA,IACjC,6BACA,4BAEE4C,EAAWpB,KAAI,SAAAT,GAAS,OAAK,kBAAC,EAAD,CAAS2B,IAAK3B,EAAWA,UAAWA,UChBtE8B,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.0c54a20c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AgregarCategoria({ setCategorias }) {\r\n\tconst [inputValue, setInputValue] = useState('  ');\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategorias(cats => [inputValue,...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\nAgregarCategoria.propTypes = {\r\n\tsetCategorias: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AgregarCategoria","export const obtenerGif = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=Lf0tGc9uqCCAHYl0yV60FkPT6k0hFA4c`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            img: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs; \r\n}","import React from 'react'\r\n\r\nexport default function GifGridItem({img}) {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.img} alt={img.title}></img>\r\n            <p> {img.title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\t\r\n\t\r\n\tconst {data: images, loading} = useFetchGifs(categoria);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{categoria}</h3>\r\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Cargando ...</p> }\r\n\t\t\t<div className=\"card-grid animate__animated animate__fadeIn\">\r\n\t\t\t\t{images.map(img => (<GifGridItem key={img.img} img={img} >   </GifGridItem>))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { obtenerGif } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    \r\n    const [state, setState] = useState({ data: [], loading: true });\r\n\r\n    useEffect(() => {\r\n        obtenerGif(categoria).then( imgs => {\r\n            setState(\r\n                { \r\n                    data: imgs,\r\n                    loading: false \r\n                }   \r\n            );\r\n        });\r\n    }, [ categoria ])\r\n\r\n    return state;\r\n};","import React, { useState } from 'react';\r\nimport AgregarCategoria from './components/AgregarCategoria';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\tconst [categorias, setCategorias] = useState(['Hunter x Hunter', 'Parasyte', 'One punch',]);\r\n\r\n\t// const agregarCategoria = categoria => {\r\n\t//     setCategorias([...categorias, categoria]);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Gift Expert</h2>\r\n\t\t\t<AgregarCategoria setCategorias={setCategorias}  ></AgregarCategoria>\r\n\t\t\t<hr></hr>\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategorias.map(categoria => (<GifGrid key={categoria} categoria={categoria} />))\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\nReactDOM.render(\n  <GifExpertApp />\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}